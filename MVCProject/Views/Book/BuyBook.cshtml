@model BuyBookViewModel
@{
    ViewData["Title"] = "Buy";
}

<h2>Buy @Model.BookTitle</h2>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<form asp-action="ConfirmPurchase" method="post">
    <input type="hidden" asp-for="BookId" />
    <div class="form-group">
        <label>Price: @Model.Price</label><br />
        <label>Available: @Model.AvailableQuantity</label>
    </div>
    <div class="form-group">
        <label asp-for="QuantityToBuy"></label>
        <input asp-for="QuantityToBuy"
               class="form-control"
               type="number"
               min="1"
               max="@Model.AvailableQuantity"
               required
               oninvalid="this.setCustomValidity('Please enter a valid quantity (1 to @Model.AvailableQuantity)')"
               oninput="this.setCustomValidity('')" />
        <span asp-validation-for="QuantityToBuy" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-success">Confirm Purchase</button>
</form>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

